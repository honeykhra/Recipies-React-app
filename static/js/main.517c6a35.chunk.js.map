{"version":3,"sources":["Recipie.js","App.js","reportWebVitals.js","index.js"],"names":["Recipie","title","image","src","alt","App","useState","recipies","setRecipies","search","setSearch","useEffect","getRecipies","a","fetch","response","json","data","console","log","results","className","type","value","onChange","e","target","map","recipie","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAWeA,EATC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACtB,OACI,gCACI,6BAAKD,IACL,qBAAKE,IAAKD,EAAOE,IAAI,S,MC8ClBC,MAhDf,WAAe,MAQmBC,mBAAS,IAR5B,mBAQNC,EARM,KAQIC,EARJ,OASeF,mBAAS,IATxB,mBASNG,EATM,KASEC,EATF,KAWbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,iEAAD,OAC8BL,EAD9B,mFADV,cACZM,EADY,gBAGCA,EAASC,OAHV,OAGZC,EAHY,OAIlBC,QAAQC,IAAIF,EAAKG,SACjBZ,EAAYS,EAAKG,SALC,2CAAH,qDAcjB,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAhB,UACE,uBAAOA,UAAU,aAAaC,KAAK,OAAOC,MAAOd,EAAQe,SAT1C,SAAAC,GACnBf,EAAUe,EAAEC,OAAOH,OACnBL,QAAQC,IAAIM,EAAEC,OAAOH,UAQjB,wBAAQF,UAAU,gBAAgBC,KAAK,SAAvC,uBAIDf,EAASoB,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CACE3B,MAAO2B,EAAQ3B,MACfC,MAAO0B,EAAQ1B,OACV0B,EAAQC,WCjCRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.517c6a35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Recipie = ({ title, image }) => {\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <img src={image} alt=\"\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipie;","import React, { useEffect, useState } from 'react';\nimport Recipie from './Recipie';\nimport './App.css';\n\nfunction App() {\n\n  // const APP_ID = \"\";\n  // const API_KEY = \"9cf6a7eff0a94077bf8ba44941ad3316\";\n\n  // const example = \n  // \"https://api.spoonacular.com/recipes/complexSearch?apiKey=9cf6a7eff0a94077bf8ba44941ad3316\";\n\n  const [recipies, setRecipies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    getRecipies();\n  }, [search]);\n\n  const getRecipies = async () => {\n    const response = await fetch(`\n    https://api.spoonacular.com/recipes/complexSearch?query=${search}&diet=vegeterian&maxFat=50&number=10&apiKey=d9364f20e1844b80b789f4bad4d04f5a  `)\n    const data = await response.json();\n    console.log(data.results);\n    setRecipies(data.results);\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(e.target.value);\n    // console.log(search);\n  };\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} ></input>\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {recipies.map(recipie => (\n        <Recipie\n          title={recipie.title}\n          image={recipie.image}\n          key={recipie.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}